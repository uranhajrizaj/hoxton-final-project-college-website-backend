// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  fullname  String
  image     String
  email     String @unique
  password  String
  role      String
  students  User[] @relation("TeacherStudents")
  teacher   User?  @relation("TeacherStudents", fields: [teacherId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  teacherId Int?

  childrens User[] @relation("ParentStudent")
  parent    User?  @relation("ParentStudent", fields: [parentId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  parentId  Int?

  class   Class? @relation(fields: [classId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  classId Int?

  classes Class[] @relation("teachers")

  subjects Subject[] @relation("teacher")

  posts News[]

  teachertoStudentMark Mark[]  @relation("teachermark")
  stduentFromTeacherMark Mark[] @relation("studentmark")
}

model Class {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  students User[]
  teachers User[]    @relation("teachers")
  subjects Subject[]
}

model Subject {
  id         Int     @id @default(autoincrement())
  name       String  @unique 
  professors User[]  @relation("teacher")
  classes    Class[]
  marks      Mark[]
}

model Mark {
  id   Int @id @default(autoincrement())
  mark Int  

  subject   Subject @relation(fields: [subjectId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  subjectId Int

  teacher   User @relation("teachermark",fields: [teacherId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  teacherId Int

  student   User @relation("studentmark",fields: [studentId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  studentId Int
}

model News {
  id      Int     @id @default(autoincrement())
  title   String
  content String
  image   String?
  admin   User   @relation(fields: [userId], references: [id],onDelete: Cascade,onUpdate: Cascade)
  userId  Int
}
